{"version":3,"sources":["Card/index.jsx","App.js","index.js"],"names":["Card","text","onClickHandler","index","isVisible","isMatched","className","onClick","App","generate","board","sort","Math","random","onCardClick","i","console","log","cardflip","flippedCard","matched","includes","setVisible","visible","setTimeout","updatedBoard","setBoard","setFlippedCard","setCardFlip","setMatches","match","setMatched","setCount","count","useState","useEffect","window","addEventListener","e","preventDefault","returnValue","map","card","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAWeA,MATf,YAAgE,IAAjDC,EAAgD,EAAhDA,KAAKC,EAA2C,EAA3CA,eAAeC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,UAAUC,EAAY,EAAZA,UAC/C,OACI,sBAAKC,UAAS,eAAYF,EAAU,aAAa,YAAnC,YAAkDC,EAAU,eAAe,IAA3E,KAAoFE,QAAS,kBAAIL,EAAeD,EAAKE,IAAnI,UACA,qBAAKG,UAAU,aACf,qBAAKA,UAAU,YAAf,SAA8BL,QCoFvBO,MAtFf,WAOC,SAASC,IACR,IAEIC,EAAM,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAEvC,OADAA,EAAM,GAAD,mBAAKA,GAAL,YAAcA,IACJA,EARDC,MAAM,kBAAIC,KAAKC,SAAS,MAWxC,SAASC,EAAYb,EAAKc,GACzBC,QAAQC,IAAIhB,EAAKc,EAAEG,EAASC,GACzBJ,GAAGI,GAAeC,EAAQC,SAASN,KAGtCO,EAAW,GAAD,mBAAKC,GAAL,CAAaR,KACvBS,YAAW,WACV,GAAGN,EAAS,CACZ,GAAGjB,GAAMS,EAAMS,GAAa,CAE3B,IAAIM,EAAa,YAAIf,GACrBe,EAAaV,GAAG,GAChBU,EAAaN,GAAa,GAC1BH,QAAQC,IAAIQ,GACZC,EAASD,GACTE,GAAgB,GAChBC,GAAY,GACZC,EAAWC,EAAM,GACjBC,EAAW,GAAD,mBAAKX,GAAL,CAAaL,EAAEI,UAGzBS,GAAY,GACZD,GAAgB,GAEjBL,EAAW,SAKXM,GAAY,GACZD,EAAeZ,KAGd,KAEFiB,EAASC,EAAM,IAGhB,MAAuBC,mBAASzB,KAAhC,mBAAOC,EAAP,KAAagB,EAAb,KACA,EAA6BQ,oBAAS,GAAtC,mBAAOhB,EAAP,KAAgBU,EAAhB,KACA,EAAmCM,oBAAU,GAA7C,mBAAOf,EAAP,KAAmBQ,EAAnB,KACA,EAAuBO,mBAAS,GAAhC,mBAAOD,EAAP,KAAaD,EAAb,KACA,EAAyBE,mBAAS,GAAlC,mBAAOJ,EAAP,KAAaD,EAAb,KACA,EAA2BK,mBAAS,IAApC,mBAAOX,EAAP,KAAeD,EAAf,KACA,EAA2BY,mBAAS,IAApC,mBAAOd,EAAP,KAAeW,EAAf,KAUI,OARJf,QAAQC,IAAIR,KACX0B,qBAAU,WACTC,OAAOC,iBAAiB,gBAAgB,SAAUC,GACxCA,EAAEC,iBACFD,EAAEE,YAAc,QAGzB,IAEK,sBAAKlC,UAAY,MAAjB,UACA,sBAAKA,UAAU,eAAf,UACN,sBAAKA,UAAU,UAAf,UAA0B,yCAAgB,4BAAIwB,OAC9C,sBAAKxB,UAAU,OAAf,UAAuB,uCAAc,4BAAI2B,UAEzC,qBAAK3B,UAAU,YAAf,SACM,qBAAKA,UAAU,QAAf,SACCI,EAAM+B,KAAI,SAACC,EAAK3B,GAAN,OACV,cAAC,EAAD,CAAMd,KAAMyC,EAAcxC,eAAgBY,EAAaX,MAAOY,EAAGX,UAAWmB,EAAQF,SAASN,GAAIV,UAAWe,EAAQC,SAASN,IAAtGA,cC5EhC4B,IAASC,OACL,cAAC,IAAMC,WAAP,UAEA,cAAC,EAAD,MAGAC,SAASC,eAAe,W","file":"static/js/main.14cacd9b.chunk.js","sourcesContent":["import './card.css';\r\n\r\nfunction Card({text,onClickHandler,index,isVisible,isMatched}) {\r\n    return ( \r\n        <div className = {`Card ${isVisible?\"card-front\":\"card-back\"} ${isMatched?\"card-matched\":\" \"} `}  onClick={()=>onClickHandler(text,index)}>\r\n        <div className=\"backFace\"></div>\r\n        <div className=\"frontFace\" >{ text}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import './App.css';\n\nimport React , {useState, useEffect} from \"react\";\nimport Card from './Card';\nfunction App() {\n\n\tfunction shuffle(array) {\n \n   return array.sort( ()=>Math.random()-0.5 );\n \n}\n\tfunction generate() {\n  var text = \"\";\n  \n  let board=[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"];\n  board=[...board,...board]; \n  return shuffle(board);\n \n}\nfunction onCardClick(text,i){\n\tconsole.log(text,i,cardflip,flippedCard)\n\tif(i==flippedCard || matched.includes(i)){\n\t\treturn\n\t}\n\tsetVisible([...visible,i])\n\tsetTimeout(()=>{\n\t\tif(cardflip){\n\t\tif(text==board[flippedCard]){\n\t\t\t\n\t\t\tlet updatedBoard=[...board]\n\t\t\tupdatedBoard[i]=\"\"\n\t\t\tupdatedBoard[flippedCard]=\"\"\n\t\t\tconsole.log(updatedBoard)\n\t\t\tsetBoard(updatedBoard)\n\t\t\tsetFlippedCard(-1)\n\t\t\tsetCardFlip(false)\n\t\t\tsetMatches(match+1)\n\t\t\tsetMatched([...matched,i,flippedCard])\n\t\t}\n\t\telse{\n\t\t\tsetCardFlip(false)\n\t\t\tsetFlippedCard(-1)\n\t\t}\n\t\tsetVisible([])\n\n\n\t}\n\telse{\n\t\tsetCardFlip(true);\n\t\tsetFlippedCard(i);\n\n\t}\n\t},300)\n\t\n\tsetCount(count+1)\n}\n\nconst [board,setBoard]=useState(generate());\nconst [cardflip,setCardFlip]=useState(false);\nconst [flippedCard,setFlippedCard]=useState(-1);\nconst [count,setCount]=useState(0);\nconst [match,setMatches]=useState(0);\nconst [visible,setVisible]=useState([])\nconst [matched,setMatched]=useState([])\n\nconsole.log(generate());\n\tuseEffect(()=>{\n\t\twindow.addEventListener('beforeunload', function (e) {\n            e.preventDefault();\n            e.returnValue = '';\n        });\n\n\t},[])\n    return ( \n        <div className = \"App\" >\n        <div className=\"left-section\">\n\t\t<div className=\"matches\" ><h3>Matches</h3><p>{match}</p></div>\n\t\t<div className=\"menu\" ><h3>Turns</h3><p>{count}</p></div>\n\t\t</div>\n\t\t<div className=\"container\">\n        <div className=\"Board\">\n        {board.map((card,i) =>(\n        \t<Card text={card} key={i} onClickHandler={onCardClick} index={i} isVisible={visible.includes(i)} isMatched={matched.includes(i)}/>\n        \t))}\n        </div>\n        </div>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render( \n    <React.StrictMode >\n    \n    <App / >\n    \n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}